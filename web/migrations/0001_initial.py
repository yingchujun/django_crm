# Generated by Django 3.2 on 2023-04-24 11:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.SmallIntegerField(choices=[(1, '激活'), (2, '删除')], default=1, verbose_name='状态')),
                ('username', models.CharField(db_index=True, max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('mobile', models.CharField(db_index=True, max_length=11, verbose_name='手机号')),
                ('create_data', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.SmallIntegerField(choices=[(1, '激活'), (2, '删除')], default=1, verbose_name='状态')),
                ('username', models.CharField(db_index=True, max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('mobile', models.CharField(db_index=True, max_length=11, verbose_name='手机号')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='账号余额')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.administrator', verbose_name='创建者')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.SmallIntegerField(choices=[(1, '激活'), (2, '删除')], default=1, verbose_name='状态')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('percent', models.IntegerField(help_text='(填入0-100整数表示百分比，例如: 90，表示90%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='折扣')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PricePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='数量')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='价格')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.SmallIntegerField(choices=[(1, '激活'), (2, '删除')], default=1, verbose_name='状态')),
                ('charge_type', models.SmallIntegerField(choices=[(1, '充值'), (2, '扣款'), (3, '创建订单'), (4, '删除订单'), (5, '撤单')], verbose_name='类型')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='金额')),
                ('order_id', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='订单号')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, verbose_name='交易时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.administrator', verbose_name='管理员')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer', verbose_name='客户')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.SmallIntegerField(choices=[(1, '激活'), (2, '删除')], default=1, verbose_name='状态')),
                ('status', models.SmallIntegerField(choices=[(1, '待执行'), (2, '正在执行'), (3, '已完成'), (4, '失败')], verbose_name='状态')),
                ('oid', models.CharField(max_length=64, unique=True, verbose_name='订单号')),
                ('url', models.URLField(db_index=True, verbose_name='视频地址')),
                ('count', models.IntegerField(verbose_name='数量')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='价格')),
                ('real_place', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='实际价格')),
                ('old_view_count', models.CharField(default='0', max_length=32, verbose_name='原播放量')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer', verbose_name='客户')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.level', verbose_name='级别'),
        ),
    ]
